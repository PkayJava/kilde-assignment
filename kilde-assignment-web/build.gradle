plugins {
    id 'org.springframework.boot' version "${spring_boot}"
    id 'io.spring.dependency-management' version "${spring_dependency_management}"
    id 'java'
}

group = 'com.senior.kilde.assignment'
version = '1.0.0'

java {
    sourceCompatibility = "$java_version"
    targetCompatibility = "$java_version"
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation project(":kilde-assignment-dao")
    implementation project(":kilde-assignment-scommon")

    implementation "com.senior.cyber.frmk:common:1.0.0"
    implementation "com.senior.cyber.frmk:jdbc-query:1.0.0"

    implementation "joda-time:joda-time:${joda_time}"
    implementation "commons-validator:commons-validator:${commons_validator}"

    implementation "commons-io:commons-io:${commons_io}"
    implementation "org.apache.commons:commons-lang3:${commons_lang3}"

    implementation "org.apache.wicket:wicket-core:${wicket}"
    implementation "org.apache.wicket:wicket-extensions:${wicket}"
    implementation "org.apache.wicket:wicket-auth-roles:${wicket}"

    implementation "org.springframework.boot:spring-boot-starter-web:${spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-json:${spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-security:${spring_boot}"

    implementation "com.google.guava:guava:${guava}"

    implementation "org.jasypt:jasypt:${jasypt}"
    implementation "com.mysql:mysql-connector-j:${mysql}"

    compileOnly "org.projectlombok:lombok:${lombok}"
    annotationProcessor "org.projectlombok:lombok:${lombok}"

    testImplementation "org.apache.wicket:wicket-tester:${wicket}"
    testImplementation "org.springframework.boot:spring-boot-starter-test:${spring_boot}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${spring_cloud}"
    }
}

bootJar {
    archiveBaseName = "kilde-assignment-web"
    archiveVersion = ""
}

tasks.named('test') {
    useJUnitPlatform()
}